#!/usr/bin/env bash

set -o errexit
set -o nounset

riak_admin=dev1/bin/riak-admin

script_dir=''
script_path=''
if hash realpath 2>/dev/null
then
  script_dir="$(dirname $0)"
  script_path="$(realpath $script_dir)"
else
  script_path="$(perl -e 'use File::Basename;use Cwd q(abs_path);print dirname(abs_path(shift))' $0)"
fi
PATH="$PATH:$script_path"

default_dev_path=$HOME/Projects/basho/riak/dev
default_node_count=4

old_search=false
strong_consistency=false

function make_temp_file
{
  local template="$1"
  if [[ ! $template == *XXXXXX ]]
  then
    template="$template.XXXXXX"
  fi
  mktemp -t "$template"
}

function transfers_in_progress
{
  local -i retval=0
  local transfers_out=$(make_temp_file riak-admin-transfers)

  set +o errexit
  $riak_admin transfers > $transfers_out 2>&1
  if grep -iqF 'No transfers active' $transfers_out
  then
    retval=1 # No longer in progress, return false
  else
    retval=0
  fi
  # rm -vf $transfers_out
  set -o errexit
  return $retval
}

function now
{
  date '+%Y-%m-%d %H:%M:%S'
}

function pwarn
{
  echo "$(now) [warning]: $@" 1>&2
}

function perr
{
  echo "$(now) [error]: $@" 1>&2
}

function pinfo
{
  echo "$(now) [info]: $@"
}

function errexit
{
  perr "$@"
  exit 1
}

function onexit
{
  echo Exiting!
  popd
}

function wait_for_transfers
{
  sleep 5
  while transfers_in_progress
  do
    pinfo 'Transfers in progress'
    sleep 5
  done
}

usage () {
cat << 'EOF'
setup-dev-cluster: Quickly setup a dev Riak cluster.

Usage: setup-dev-cluster [-p <riak dev path>] [-l <node count>] [-s] [-c]

-p      Riak dev path, defaults to "$default_dev_path"
-n      Node count, defaults to "$default_node_count"
-s      Setup cluster to use Legacy Search instead of Yokozuna Search.
-c      Setup cluster for Strong Consistency, overrides -n setting.

EOF
exit
}

while getopts "sp:n:ch" opt; do
  case $opt in
    s)
      old_search=true;;
    p)
      dev_cluster_path=$OPTARG;;
    n)
      node_count=$OPTARG;;
    c)
      strong_consistency=true;;
    h)
      usage;;
    \?) 
      exit 1;;
    :) 
      exit 1;;
  esac
done

if [[ "$strong_consistency" = true ]]
then
  node_count=8
fi

trap onexit EXIT

dev_cluster_path="${dev_cluster_path:-$default_dev_path}"
declare -i node_count="${node_count:-$default_node_count}"
declare -i i=0

if [[ -d $dev_cluster_path ]]
then
  pinfo "Setting up dev cluster in $dev_cluster_path with $node_count nodes"
else
  errexit "Dev cluster path $dev_cluster_path does not exist!"
fi

if [[ "$old_search" = true ]]
then
  pinfo "Setting up dev cluster with Legacy Search"
fi

if [[ "$strong_consistency" = true ]]
then
  pinfo "Setting up dev cluster with Strong Consistency"
fi

pushd $dev_cluster_path > /dev/null

pinfo "Stopping Riak"

set +o errexit
for devdir in dev*
do
  $devdir/bin/riak stop > /dev/null
done
set -o errexit

pinfo "Removing Riak data"

rm -rf dev*/log/* \
       dev*/data/ring/* \
       dev*/data/bitcask/* \
       dev*/data/leveldb/* \
       dev*/data/kv_vnode/* \
       dev*/data/leveldb/* \
       dev*/data/anti_entropy/* \
       dev*/data/yz/* \
       dev*/data/yz_anti_entropy/* \
       dev*/data/cluster_meta/* \
       dev*/data/generated.configs/*

declare -i pb_port=10017
declare -i http_port=10018

pinfo "Configuring riak.conf"

for devdir in dev*
do
  adv_conf="$devdir/etc/advanced.config"
  riak_conf="$devdir/etc/riak.conf"
  riak_conf_orig="$devdir/etc/riak.conf.orig"
  if [[ -f $riak_conf_orig ]]
  then
    cp -f $riak_conf_orig $riak_conf
  else
    cp -f $riak_conf $riak_conf_orig
  fi

  gen-riak-conf $riak_conf $http_port $pb_port
  gen-adv-conf $adv_conf

  if [[ "$old_search" = true ]]
  then
    legacy-search-conf $riak_conf $adv_conf
  fi

  if [[ "$strong_consistency" = true ]]
  then
    strong-consistency-conf $riak_conf
  fi

  (( pb_port += 10 ))
  (( http_port += 10 ))
done

pinfo "Starting Riak"

for ((i = 1; i <= node_count; ++i))
do
  devdir="dev$i"
  $devdir/bin/riak start
done

for ((i = 2; i <= node_count; ++i))
do
  devdir="dev$i"
  $devdir/bin/riak-admin cluster join dev1@127.0.0.1
done

$riak_admin cluster plan
$riak_admin cluster commit
$riak_admin transfer-limit 8

wait_for_transfers

pinfo "Riak started, setting up bucket types"
riak-cluster-config "$riak_admin" 10018 $strong_consistency
pinfo "Done!"

